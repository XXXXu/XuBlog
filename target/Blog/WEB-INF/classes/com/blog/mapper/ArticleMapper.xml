<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.blog.entities.Article">
    <id column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="post_time" jdbcType="TIMESTAMP" property="postTime" />
    <result column="visit" jdbcType="INTEGER" property="visit" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <resultMap id="oneResultMap" type="com.blog.entities.Article" >
  	<id column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="post_time" jdbcType="TIMESTAMP" property="postTime" />
    <result column="visit" jdbcType="INTEGER" property="visit" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <association property="articleType" column="type" javaType="com.blog.entities.ArticleType"
    	select="com.blog.dao.ArticleTypeMapper.selectByArctileId">
    	<id column="article_type_id" jdbcType="INTEGER" property="articleTypeId" />
    	<result column="name" jdbcType="VARCHAR" property="name" />	
    </association>
    <collection property="comments" column="article_id"
    	select="com.blog.dao.CommentMapper.selectByArticleId">
    	<id column="comment_id" jdbcType="INTEGER" property="commentId" />
	    <result column="content" jdbcType="VARCHAR" property="content" />
	    <result column="email" jdbcType="VARCHAR" property="email" />
	    <result column="article_id" jdbcType="INTEGER" property="articleId" />
	    <result column="post_time" jdbcType="TIMESTAMP" property="postTime" />
    </collection>
    <!-- <collection property="lables" column="article_id" javaType="com.blog.entities.Lable"
    	select="com.blog.dao.LableMapper.selectByArticleId">
    	<id column="lable_id" jdbcType="INTEGER" property="lableId" />
    	<result column="name" jdbcType="VARCHAR" property="name" />
    </collection> -->
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.blog.entities.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <resultMap id="allArticle" extends="BaseResultMap" type="com.blog.entities.Article">
    <association property="articleType" column="type" javaType="com.blog.entities.ArticleType"
    	select="com.blog.dao.ArticleTypeMapper.selectByArctileId">
    	<id column="article_type_id" jdbcType="INTEGER" property="articleTypeId" />
    	<result column="name" jdbcType="VARCHAR" property="name" />	
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    article_id, title, summary, post_time, visit, type
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.blog.entities.ArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectArticleCountByType" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	select count(*) from article where type=${_parameter}
  </select>
  
  <select id="selectArticleByType" parameterType="java.lang.Integer" resultMap="allArticle">
  	select * from article where type=${_parameter} order by post_time desc
  </select>
  
 	<!-- selectArticleByTime(String format); -->
  <select id="selectArticleByTime" parameterType="java.lang.Integer" resultMap="allArticle">
  	select * from article where post_time LIKE CONCAT('${_parameter}','%') order by post_time desc
  </select>
  
  <select id="selectByExample" parameterType="com.blog.entities.ArticleExample" resultMap="allArticle">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause} desc
    </if>
 	</select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="oneResultMap">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where article_id = #{articleId,jdbcType=INTEGER}
  </select>
  
  <select id="selectArticleGroup" resultType="com.blog.entities.ArticleGroupByTime">
  	SELECT post_time postTime, count(1) articleCount FROM article GROUP BY YEAR(post_time),MONTH(post_time)
  </select>
  <!-- searchArticle(String searchParam) -->
  <select id="searchArticle" resultMap="allArticle">
  	select * from article where 
	CONCAT(title,summary) like  CONCAT('%','${_parameter}','%')
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where article_id = #{articleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blog.entities.ArticleExample">
    delete from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blog.entities.Article">
    insert into article (article_id, title, summary, 
      post_time, visit, type, 
      content)
    values (#{articleId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, 
      #{postTime,jdbcType=TIMESTAMP}, #{visit,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="articleId" useGeneratedKeys="true" parameterType="com.blog.entities.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        article_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="postTime != null">
        post_time,
      </if>
      <if test="visit != null">
        visit,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="postTime != null">
        #{postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="visit != null">
        #{visit,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blog.entities.ArticleExample" resultType="java.lang.Long">
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article
    <set>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.postTime != null">
        post_time = #{record.postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.visit != null">
        visit = #{record.visit,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update article
    set article_id = #{record.articleId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      post_time = #{record.postTime,jdbcType=TIMESTAMP},
      visit = #{record.visit,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article
    set article_id = #{record.articleId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      post_time = #{record.postTime,jdbcType=TIMESTAMP},
      visit = #{record.visit,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.entities.Article">
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="postTime != null">
        post_time = #{postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="visit != null">
        visit = #{visit,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.entities.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      post_time = #{postTime,jdbcType=TIMESTAMP},
      visit = #{visit,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.entities.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      post_time = #{postTime,jdbcType=TIMESTAMP},
      visit = #{visit,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
</mapper>